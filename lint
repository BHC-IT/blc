blc/vecteur2.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/vecteur2.hpp:9:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:10:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:11:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:14:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:15:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:16:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:17:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:18:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:20:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:22:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:23:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:24:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:25:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:27:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:28:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:29:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:30:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:31:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:32:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:34:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:35:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:36:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:37:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:38:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:39:  Should have a space between // and comment  [whitespace/comments] [4]
blc/vecteur2.hpp:41:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:42:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:43:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/vecteur2.hpp:49:  Namespace should be terminated with "// namespace math"  [readability/namespace] [5]
blc/vecteur2.hpp:50:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/vecteur2.hpp:50:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/errorHandle.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/errorHandle.hpp:16:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
blc/errorHandle.hpp:17:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
blc/errorHandle.hpp:17:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:18:  You don't need a ; after a }  [readability/braces] [4]
blc/errorHandle.hpp:18:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:19:  You don't need a ; after a }  [readability/braces] [4]
blc/errorHandle.hpp:19:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:20:  You don't need a ; after a }  [readability/braces] [4]
blc/errorHandle.hpp:20:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:21:  You don't need a ; after a }  [readability/braces] [4]
blc/errorHandle.hpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:22:  You don't need a ; after a }  [readability/braces] [4]
blc/errorHandle.hpp:22:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:23:  You don't need a ; after a }  [readability/braces] [4]
blc/errorHandle.hpp:25:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/errorHandle.hpp:40:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/errorHandle.hpp:40:  Missing space before {  [whitespace/braces] [5]
blc/errorHandle.hpp:45:  Namespace should be terminated with "// namespace error"  [readability/namespace] [5]
blc/errorHandle.hpp:46:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/promise.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/promise.hpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:23:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:24:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:26:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:27:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
blc/promise.hpp:27:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:30:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:31:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/promise.hpp:42:  Namespace should be terminated with "// namespace tools"  [readability/namespace] [5]
blc/promise.hpp:43:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/promise.hpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:56:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:92:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
blc/promise.hpp:93:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
src/promise.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/regex.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/regex.cpp:5:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/regex.cpp:13:  Missing space before {  [whitespace/braces] [5]
src/regex.cpp:18:  Missing space before {  [whitespace/braces] [5]
src/regex.cpp:28:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
src/stringOp.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/stringOp.cpp:4:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/stringOp.cpp:7:  Missing space before {  [whitespace/braces] [5]
src/stringOp.cpp:8:  Missing space before {  [whitespace/braces] [5]
src/stringOp.cpp:17:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/stringOp.cpp:21:  Missing space before {  [whitespace/braces] [5]
src/stringOp.cpp:28:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/stringOp.cpp:30:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/blc.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/blc.hpp:33:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:35:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:38:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:41:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:44:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:47:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:50:  Missing space before {  [whitespace/braces] [5]
blc/blc.hpp:51:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/blc.hpp:51:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/protocolCaps.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/protocolCaps.hpp:12:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:13:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:15:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:16:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:17:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:18:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:19:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:20:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:22:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:23:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:24:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:25:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:26:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolCaps.hpp:32:  Namespace should be terminated with "// namespace tools"  [readability/namespace] [5]
blc/protocolCaps.hpp:33:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/protocolCaps.hpp:36:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
src/bindTest.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/bindTest.cpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/bindTest.cpp:66:  Missing space before {  [whitespace/braces] [5]
src/bindTest.cpp:75:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/bindTest.cpp:78:  Missing space before {  [whitespace/braces] [5]
blc/global.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/global.hpp:7:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
concept/operable.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
concept/operable.hpp:11:  You don't need a ; after a }  [readability/braces] [4]
concept/operable.hpp:17:  You don't need a ; after a }  [readability/braces] [4]
concept/operable.hpp:19:  Namespace should be terminated with "// namespace concept"  [readability/namespace] [5]
concept/operable.hpp:20:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
concept/operable.hpp:20:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:286:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:569:  Missing space after ,  [whitespace/comma] [3]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:580:  Missing space after ,  [whitespace/comma] [3]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:587:  Missing space after ,  [whitespace/comma] [3]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:588:  Missing space after ,  [whitespace/comma] [3]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:589:  Missing space after ,  [whitespace/comma] [3]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:596:  Missing space after ,  [whitespace/comma] [3]
build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c:607:  Missing space after ,  [whitespace/comma] [3]
blc/bindTest.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/bindTest.hpp:8:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/client2way.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/client2way.hpp:12:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:13:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:17:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:18:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:19:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:20:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:22:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:23:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:24:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:25:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:26:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:27:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:28:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:29:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:30:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:31:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:32:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:33:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:34:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:35:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:36:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:37:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:38:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:39:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:40:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:41:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:42:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:43:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:44:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:45:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:46:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:47:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:48:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:49:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:50:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:51:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:52:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:53:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:54:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:55:  "private:" should be preceded by a blank line  [whitespace/blank_line] [3]
blc/client2way.hpp:56:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:57:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/client2way.hpp:59:  Namespace should be terminated with "// namespace network"  [readability/namespace] [5]
blc/client2way.hpp:60:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/client2way.hpp:60:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
test/main.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/pipe.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/pipe.cpp:5:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:16:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:27:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:38:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:49:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:61:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:68:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:73:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:78:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:83:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:88:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:93:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:98:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:103:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:113:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:124:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:136:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:149:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:154:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:171:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:176:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:187:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:192:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:203:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:213:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:219:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:222:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:240:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:246:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:252:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:257:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:267:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
src/pipe.cpp:272:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:279:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:286:  Missing space before {  [whitespace/braces] [5]
src/pipe.cpp:298:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/pipe.cpp:303:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
test/pipe.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/VFiles.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/VFiles.cpp:5:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:11:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:18:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:23:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:26:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:26:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:38:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:40:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:40:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:42:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:50:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]
src/VFiles.cpp:55:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:57:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:59:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:59:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:85:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:93:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:101:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:106:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:107:  At least two spaces is best between code and comments  [whitespace/comments] [2]
src/VFiles.cpp:107:  Should have a space between // and comment  [whitespace/comments] [4]
src/VFiles.cpp:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:108:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:109:  At least two spaces is best between code and comments  [whitespace/comments] [2]
src/VFiles.cpp:109:  Should have a space between // and comment  [whitespace/comments] [4]
src/VFiles.cpp:110:  At least two spaces is best between code and comments  [whitespace/comments] [2]
src/VFiles.cpp:110:  Should have a space between // and comment  [whitespace/comments] [4]
src/VFiles.cpp:111:  At least two spaces is best between code and comments  [whitespace/comments] [2]
src/VFiles.cpp:111:  Should have a space between // and comment  [whitespace/comments] [4]
src/VFiles.cpp:112:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:112:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:116:  At least two spaces is best between code and comments  [whitespace/comments] [2]
src/VFiles.cpp:116:  Should have a space between // and comment  [whitespace/comments] [4]
src/VFiles.cpp:121:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]
src/VFiles.cpp:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:133:  Should have a space between // and comment  [whitespace/comments] [4]
src/VFiles.cpp:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:154:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:156:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:156:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:172:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:172:  Missing space before {  [whitespace/braces] [5]
src/VFiles.cpp:175:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]
src/VFiles.cpp:182:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/VFiles.cpp:184:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/stringOp.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/stringOp.hpp:13:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/cinReadable.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/cinReadable.hpp:3:  Missing space before {  [whitespace/braces] [5]
blc/cinReadable.hpp:8:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/server2way.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/server2way.hpp:16:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:17:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:18:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:19:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:23:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:24:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:25:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:26:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/server2way.hpp:28:  Is this a non-const reference? If so, make const or use a pointer: int &port  [runtime/references] [2]
blc/server2way.hpp:30:  Is this a non-const reference? If so, make const or use a pointer: blc::network::Client &client  [runtime/references] [2]
blc/server2way.hpp:30:  Is this a non-const reference? If so, make const or use a pointer: blc::network::Client &data  [runtime/references] [2]
blc/server2way.hpp:36:  Namespace should be terminated with "// namespace network"  [readability/namespace] [5]
blc/server2way.hpp:37:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/server2way.hpp:37:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/constraint.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/constraint.hpp:10:  Missing space before {  [whitespace/braces] [5]
blc/constraint.hpp:14:  Missing space before {  [whitespace/braces] [5]
blc/constraint.hpp:17:  Missing space before {  [whitespace/braces] [5]
blc/constraint.hpp:26:  Namespace should be terminated with "// namespace concept"  [readability/namespace] [5]
blc/constraint.hpp:27:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/constraint.hpp:27:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
src/nonCopyable.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/nonCopyable.cpp:4:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/nonCopyable.cpp:8:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/nonCopyable.cpp:13:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/nonCopyable.cpp:17:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/pipeCluster.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/pipeCluster.hpp:21:  Namespace should be terminated with "// namespace tools"  [readability/namespace] [5]
blc/pipeCluster.hpp:22:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/pipeCluster.hpp:22:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/serializable.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/serializable.hpp:12:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/serializable.hpp:13:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/serializable.hpp:14:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/serializable.hpp:15:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/serializable.hpp:16:  Is this a non-const reference? If so, make const or use a pointer: std::string &str  [runtime/references] [2]
blc/serializable.hpp:19:  Namespace should be terminated with "// namespace tools"  [readability/namespace] [5]
blc/serializable.hpp:20:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/serializable.hpp:20:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
blc/protocolFactory.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
blc/protocolFactory.hpp:12:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:13:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:14:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:15:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:16:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:17:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:18:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:19:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:20:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:21:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:22:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:23:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:24:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:25:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:26:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:27:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:28:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:29:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:30:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:31:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:32:  At least two spaces is best between code and comments  [whitespace/comments] [2]
blc/protocolFactory.hpp:33:  You don't need a ; after a }  [readability/braces] [4]
blc/protocolFactory.hpp:34:  "private:" should be preceded by a blank line  [whitespace/blank_line] [3]
blc/protocolFactory.hpp:37:  Namespace should be terminated with "// namespace tools"  [readability/namespace] [5]
blc/protocolFactory.hpp:38:  Namespace should be terminated with "// namespace blc"  [readability/namespace] [5]
blc/protocolFactory.hpp:40:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
src/main.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
src/main.cpp:12:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
src/main.cpp:20:  Missing space after ,  [whitespace/comma] [3]
src/main.cpp:25:  Missing space before {  [whitespace/braces] [5]
src/main.cpp:28:  Missing space before {  [whitespace/braces] [5]
src/main.cpp:41:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
test/catch.hpp:11:  #ifndef header guard has wrong style, please use: TEST_CATCH_HPP_  [build/header_guard] [5]
test/catch.hpp:17617:  #endif line should be "#endif  // TEST_CATCH_HPP_"  [build/header_guard] [5]
test/catch.hpp:29:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:32:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:42:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:172:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:225:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:234:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:249:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:252:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:253:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:255:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:260:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:272:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:316:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:321:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:333:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:336:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:337:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:338:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:343:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:347:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:363:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:383:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:395:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:454:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:494:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:532:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:544:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:549:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:582:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:608:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:611:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:618:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:627:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:638:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:650:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:663:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:668:  Is this a non-const reference? If so, make const or use a pointer: std::string& lhs  [runtime/references] [2]
test/catch.hpp:674:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:717:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:718:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:719:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:757:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:766:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:767:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:768:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:769:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:792:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:799:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:802:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:804:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:814:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:816:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:817:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:819:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:833:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:888:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:888:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:889:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:889:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:890:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:890:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:891:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:892:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:893:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:893:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:894:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:894:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:895:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:895:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:898:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:898:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:899:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:899:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:900:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:900:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:901:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:902:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:903:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:903:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:904:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:904:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:905:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:905:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:943:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:945:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:956:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:972:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:982:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:988:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:997:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1006:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1009:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1014:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1017:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1021:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1022:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1024:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1025:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1030:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1033:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1059:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1085:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1088:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1091:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1098:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1102:  Namespace should be terminated with "// namespace INTERNAL_CATCH_MAKE_NAMESPACE"  [readability/namespace] [5]
test/catch.hpp:1103:  Anonymous namespace should be terminated with "// namespace"  [readability/namespace] [5]
test/catch.hpp:1105:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1109:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1112:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1117:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1120:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1144:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1145:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1150:  Namespace should be terminated with "// namespace INTERNAL_CATCH_MAKE_NAMESPACE"  [readability/namespace] [5]
test/catch.hpp:1151:  Anonymous namespace should be terminated with "// namespace"  [readability/namespace] [5]
test/catch.hpp:1158:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1158:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1161:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1166:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1169:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1178:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1188:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1194:  Namespace should be terminated with "// namespace INTERNAL_CATCH_MAKE_NAMESPACE"  [readability/namespace] [5]
test/catch.hpp:1194:  Anonymous namespace should be terminated with "// namespace"  [readability/namespace] [5]
test/catch.hpp:1200:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1208:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1215:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1222:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1226:  Namespace should be terminated with "// namespace INTERNAL_CATCH_MAKE_NAMESPACE"  [readability/namespace] [5]
test/catch.hpp:1227:  Anonymous namespace should be terminated with "// namespace"  [readability/namespace] [5]
test/catch.hpp:1232:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1233:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1235:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1236:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1241:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1244:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1262:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1271:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1272:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1277:  Namespace should be terminated with "// namespace INTERNAL_CATCH_MAKE_NAMESPACE"  [readability/namespace] [5]
test/catch.hpp:1278:  Anonymous namespace should be terminated with "// namespace"  [readability/namespace] [5]
test/catch.hpp:1285:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1288:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1288:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1293:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1296:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1296:  Missing space after ,  [whitespace/comma] [3]
test/catch.hpp:1308:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1312:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1318:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1324:  Namespace should be terminated with "// namespace INTERNAL_CATCH_MAKE_NAMESPACE"  [readability/namespace] [5]
test/catch.hpp:1324:  Anonymous namespace should be terminated with "// namespace"  [readability/namespace] [5]
test/catch.hpp:1330:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:1361:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
test/catch.hpp:1382:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1388:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:1396:  Should have a space between // and comment  [whitespace/comments] [4]
test/catch.hpp:1399:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1447:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:1465:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1483:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:1483:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1517:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:1539:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1557:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]
test/catch.hpp:1602:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1651:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1725:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1731:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1732:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1735:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1736:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1743:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1744:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1747:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1748:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:1831:  Namespace should be terminated with "// namespace Detail"  [readability/namespace] [5]
test/catch.hpp:1847:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
test/catch.hpp:1854:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1855:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1857:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1887:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:1888:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1905:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:1906:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1934:  Namespace should be terminated with "// namespace Detail"  [readability/namespace] [5]
test/catch.hpp:1946:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:1947:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1974:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:1975:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1978:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:1994:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2037:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2142:  Do not use variable-length arrays.  Use an appropriately named ('k' followed by CamelCase) compile-time constant for the size.  [runtime/arrays] [1]
test/catch.hpp:2153:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:2154:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2160:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2177:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2178:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2179:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2180:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2181:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2202:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
test/catch.hpp:2304:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:2308:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:2315:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:2319:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:2324:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
test/catch.hpp:2397:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2428:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2431:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:2435:  Is this a non-const reference? If so, make const or use a pointer: Counts& assertions  [runtime/references] [2]
test/catch.hpp:2446:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2458:  Is this a non-const reference? If so, make const or use a pointer: AssertionReaction& reaction  [runtime/references] [2]
test/catch.hpp:2463:  Is this a non-const reference? If so, make const or use a pointer: AssertionReaction& reaction  [runtime/references] [2]
test/catch.hpp:2466:  Is this a non-const reference? If so, make const or use a pointer: AssertionReaction& reaction  [runtime/references] [2]
test/catch.hpp:2470:  Is this a non-const reference? If so, make const or use a pointer: AssertionReaction& reaction  [runtime/references] [2]
test/catch.hpp:2476:  Is this a non-const reference? If so, make const or use a pointer: AssertionReaction &reaction  [runtime/references] [2]
test/catch.hpp:2488:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:2506:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:2559:  Is this a non-const reference? If so, make const or use a pointer: AssertionHandler& handler  [runtime/references] [2]
test/catch.hpp:2561:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2589:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:2616:  Is this a non-const reference? If so, make const or use a pointer: ScopedMessage& duplicate  [runtime/references] [2]
test/catch.hpp:2646:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2665:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2678:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2696:  If/else bodies with multiple statements require braces  [readability/braces] [4]
test/catch.hpp:2701:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2715:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2716:  If/else bodies with multiple statements require braces  [readability/braces] [4]
test/catch.hpp:2724:  Else clause should never be on same line as else (use 2 lines)  [whitespace/newline] [4]
test/catch.hpp:2732:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2733:  If/else bodies with multiple statements require braces  [readability/braces] [4]
test/catch.hpp:2744:  Else clause should never be on same line as else (use 2 lines)  [whitespace/newline] [4]
test/catch.hpp:2764:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2774:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2775:  If/else bodies with multiple statements require braces  [readability/braces] [4]
test/catch.hpp:2783:  Else clause should never be on same line as else (use 2 lines)  [whitespace/newline] [4]
test/catch.hpp:2788:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2815:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:2825:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:2844:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2854:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2876:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2885:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:2900:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:2911:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:2964:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:2997:  Do not leave a blank line after "public:"  [whitespace/blank_line] [3]
test/catch.hpp:2998:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3020:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3025:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:3032:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:3036:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:3145:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3149:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
test/catch.hpp:3150:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3157:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3173:  Is this a non-const reference? If so, make const or use a pointer: std::string& s  [runtime/references] [2]
test/catch.hpp:3182:  Is this a non-const reference? If so, make const or use a pointer: std::string& str  [runtime/references] [2]
test/catch.hpp:3192:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:3249:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3252:  Extra space for operator !   [whitespace/operators] [4]
test/catch.hpp:3290:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3325:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3326:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3347:  Extra space for operator !   [whitespace/operators] [4]
test/catch.hpp:3351:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3353:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3355:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
test/catch.hpp:3358:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3370:  Do not leave a blank line after "public:"  [whitespace/blank_line] [3]
test/catch.hpp:3371:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3380:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3384:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3385:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3431:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3445:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3446:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3467:  Do not leave a blank line after "public:"  [whitespace/blank_line] [3]
test/catch.hpp:3482:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3493:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3494:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3507:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:3525:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3529:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3533:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3537:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3551:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3562:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3563:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3576:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3577:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3597:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3598:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3627:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3628:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3650:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:3651:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3686:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3703:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3733:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3734:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3764:  Is this a non-const reference? If so, make const or use a pointer: AssertionHandler& handler  [runtime/references] [2]
test/catch.hpp:3771:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3776:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:3786:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:3787:  If/else bodies with multiple statements require braces  [readability/braces] [4]
test/catch.hpp:3798:  Else clause should never be on same line as else (use 2 lines)  [whitespace/newline] [4]
test/catch.hpp:3827:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3836:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3850:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3862:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:3862:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:3877:  If/else bodies with multiple statements require braces  [readability/braces] [4]
test/catch.hpp:3877:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:3893:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3897:  "override" is redundant since function is already declared as "final"  [readability/inheritance] [4]
test/catch.hpp:3903:  Missing space before {  [whitespace/braces] [5]
test/catch.hpp:3926:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:3959:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:4002:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:4067:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4068:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4071:  Unknown NOLINT error category: google-build-using-namespace  [readability/nolint] [5]
test/catch.hpp:4071:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:4071:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4071:  Should have a space between // and comment  [whitespace/comments] [4]
test/catch.hpp:4071:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
test/catch.hpp:4073:  Unknown NOLINT error category: google-build-using-namespace  [readability/nolint] [5]
test/catch.hpp:4073:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:4073:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4073:  Should have a space between // and comment  [whitespace/comments] [4]
test/catch.hpp:4073:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
test/catch.hpp:4075:  Unknown NOLINT error category: google-build-using-namespace  [readability/nolint] [5]
test/catch.hpp:4075:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:4075:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4075:  Should have a space between // and comment  [whitespace/comments] [4]
test/catch.hpp:4075:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
test/catch.hpp:4088:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
test/catch.hpp:4092:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4123:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
test/catch.hpp:4128:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4148:  Empty loop bodies should use {} or continue  [whitespace/empty_loop_body] [5]
test/catch.hpp:4155:  Lines should be <= 160 characters long  [whitespace/line_length] [2]
test/catch.hpp:4168:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
test/catch.hpp:4172:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4261:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
test/catch.hpp:4264:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4298:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4299:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4318:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4327:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4341:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4344:  Unknown NOLINT error category: clang-analyzer-core.uninitialized.UndefReturn  [readability/nolint] [5]
test/catch.hpp:4349:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
test/catch.hpp:4357:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:4371:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
test/catch.hpp:4424:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4472:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
test/catch.hpp:4502:  Namespace should be terminated with "// namespace Catch"  [readability/namespace] [5]
test/catch.hpp:4518:  "public:" should be preceded by a blank line  [whitespace/blank_line] [3]
test/catch.hpp:4552:  At least two spaces is best between code and comments  [whitespace/comments] [2]
test/catch.hpp:4566:  Do not leave a blank line after "public:"  [whitespace/blank_line] [3]
test/catch.hpp:4588:  Do not leave a blank line after "public:"  [whitespace/blank_line] [3]
test/catch.hpp:4604:  Missing username in TODO; it should look like "// TODO(my_username): Stuff."  [readability/todo] [2]
test/catch.hpp:4637:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
Done processing blc/vecteur2.hpp
Done processing blc/errorHandle.hpp
Done processing blc/promise.hpp
Done processing src/promise.cpp
Done processing src/regex.cpp
Done processing src/stringOp.cpp
Done processing blc/blc.hpp
Done processing blc/protocolCaps.hpp
Done processing src/bindTest.cpp
Done processing blc/global.hpp
Done processing concept/operable.hpp
Done processing build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c
Done processing blc/bindTest.hpp
Done processing blc/client2way.hpp
Done processing test/main.cpp
Done processing src/pipe.cpp
Done processing test/pipe.cpp
Done processing src/VFiles.cpp
Done processing blc/stringOp.hpp
Done processing blc/cinReadable.hpp
Done processing blc/server2way.hpp
Done processing blc/constraint.hpp
Done processing src/nonCopyable.cpp
Done processing blc/pipeCluster.hpp
Done processing blc/serializable.hpp
Done processing blc/protocolFactory.hpp
Done processing src/main.cpp
Traceback (most recent call last):
  File "/usr/bin/cpplint", line 11, in <module>
    load_entry_point('cpplint==1.4.5', 'console_scripts', 'cpplint')()
  File "/usr/lib/python2.7/site-packages/cpplint.py", line 6609, in main
    ProcessFile(filename, _cpplint_state.verbose_level)
  File "/usr/lib/python2.7/site-packages/cpplint.py", line 6384, in ProcessFile
    extra_check_functions)
  File "/usr/lib/python2.7/site-packages/cpplint.py", line 6216, in ProcessFileData
    extra_check_functions)
  File "/usr/lib/python2.7/site-packages/cpplint.py", line 6099, in ProcessLine
    nesting_state, error)
  File "/usr/lib/python2.7/site-packages/cpplint.py", line 3131, in CheckForNonStandardConstructs
    constructor_arg += ',' + constructor_args[i + 1]
IndexError: list index out of range
